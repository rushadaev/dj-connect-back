openapi: 3.0.0
info:
  title: 'DJ Connect API'
  description: 'API documentation for DJ Connect. All requests must include header Telegram-Init-Data: ${TWA.initData()}'
  contact:
    name: 'Contact Developer'
    url: 'https://t.me/beilec'
  license:
    name: 'Contact Lead'
    url: 'https://t.me/alievdenis1'
  version: 1.0.0
servers:
  -
    url: 'https://dj-connect.xyz/api/v1'
paths:
  /dj/register:
    post:
      tags:
        - DJ
      summary: 'Register a new DJ'
      description: 'Registers a new DJ and returns the DJ object'
      operationId: registerDJ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                stage_name:
                  type: string
                  example: 'DJ Example'
                city:
                  type: string
                  example: 'New York'
                base_prices:
                  type: string
                  example: '100'
                payment_details:
                  type: string
                  example: 'Bank details or any payment information'
              type: object
      responses:
        200:
          description: 'Successful registration'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DJ'
        400:
          description: 'Bad Request'
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
        -
          telegramAuth: []
  '/dj/profile/{id}':
    get:
      tags:
        - DJ
      summary: 'Get DJ profile'
      description: 'Returns DJ profile by ID'
      operationId: getDJProfile
      parameters:
        -
          name: id
          in: path
          description: 'DJ ID'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DJ'
        400:
          description: 'Bad Request'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: 'Not Found'
      security:
        -
          telegramAuth: []
    put:
      tags:
        - DJ
      summary: 'Update DJ profile'
      description: 'Updates DJ profile information'
      operationId: updateDJProfile
      parameters:
        -
          name: id
          in: path
          description: 'DJ ID'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                stage_name:
                  type: string
                  example: 'DJ Example'
                city:
                  type: string
                  example: 'New York'
                base_prices:
                  type: string
                  example: '100'
                payment_details:
                  type: string
                  example: 'Bank details or any payment information'
              type: object
      responses:
        200:
          description: 'Successful update'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DJ'
        400:
          description: 'Bad Request'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: 'Not Found'
      security:
        -
          telegramAuth: []
components:
  schemas:
    DJ:
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 1
        stage_name:
          type: string
          example: 'DJ Example'
        city:
          type: string
          example: 'New York'
        base_prices:
          type: string
          example: '100'
        payment_details:
          type: string
          example: 'Bank details or any payment information'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      type: object
  securitySchemes:
    telegramAuth:
      type: apiKey
      in: header
      name: Telegram-Init-Data
      description: 'Value of TWA.initData() from Telegram Web App.'
tags:
  -
    name: DJ
    description: DJ
security:
  -
    telegramAuth: []
